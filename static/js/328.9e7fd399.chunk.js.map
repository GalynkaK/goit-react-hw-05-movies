{"version":3,"file":"static/js/328.9e7fd399.chunk.js","mappings":"6OACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAqF,uBAArF,EAAuH,uBAAvH,EAA8J,4BAA9J,EAAqM,uBAArM,EAAoO,oBAApO,EAAkQ,sB,2BC4ElQ,EAtEa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,sGAEZJ,GAAW,GAFC,UAGWK,EAAAA,EAAAA,IAAaJ,GAHxB,gBAGJK,EAHI,EAGJA,KACRR,EAAQQ,GACRN,GAAW,GALC,kDAOZO,QAAQC,IAAR,MAPY,yBASZR,GAAW,GATC,6EAAH,qDAabI,GACD,GAAE,CAACH,KAGF,8BACGF,GACC,gBAAKU,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CAAEC,OAAQ,UACxBC,aAAa,0BACbC,WAAW,UACXC,MAAM,cAGRtB,GAAQA,EAAKuB,OAAS,GACxB,gBAAKX,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGb,EAAKwB,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,gBAAahB,UAAWC,EAAxB,UACGc,GACC,gBACEf,UAAWC,EACXgB,IAAKJ,EACLK,IAAG,wCAAmCH,MAGxC,gBAAKf,UAAWC,EAAagB,IAAKJ,EAAMK,IAAI,yBAG9C,cAAGlB,UAAWC,EAAd,SAA6BY,KAC7B,cAAGb,UAAWC,EAAd,SAAkCa,MAZ3BE,EADD,SAmBd,cAAGhB,UAAWC,EAAd,SAAyB,mBAIhC,C,sLClEKkB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHc,+BAIdC,OAAQ,CACNC,QANW,mCAOXC,SAAU,WAIDC,EAAiB,mCAAG,WAAOC,GAAP,wHAGNP,EAASQ,IAHH,uBAGgB,CAC3CL,OAAQ,CACNI,KAAAA,KALyB,uBAGrBtC,EAHqB,EAGrBA,KAHqB,kBAQtBA,GARsB,oGAAH,sDAcjBwC,EAAe,mCAAG,WAAOZ,GAAP,kFACvBa,EADuB,iBACHb,GADG,kBAGJG,EAASQ,IAAIE,GAHT,uBAGnBzC,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,oGAAH,sDAUfQ,EAAY,mCAAG,WAAOoB,GAAP,kFACpBc,EADoB,iBACFd,EADE,8BAGDG,EAASQ,IAAIG,GAHZ,uBAGhB1C,EAHgB,EAGhBA,KAHgB,kBAIjBA,GAJiB,oGAAH,sDAUZ2C,EAAe,mCAAG,WAAOf,GAAP,kFACvBc,EADuB,iBACLd,EADK,8BAGJG,EAASQ,IAAIG,GAHT,uBAGnB1C,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,oGAAH,sDAUf4C,EAAW,mCAAG,WAAOC,EAAeP,GAAtB,iHAGAP,EAASQ,IAHT,gBAGsB,CAC3CL,OAAQ,CACNQ,MAAOG,EACPP,KAAAA,KANmB,uBAGftC,EAHe,EAGfA,KAHe,kBAShBA,GATgB,oGAAH,uD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/Service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listImg\":\"Cast_listImg__+ZdU0\",\"list\":\"Cast_list__GlWio\",\"listItem\":\"Cast_listItem__UvJjd\",\"listName\":\"Cast_listName__cVb6+\",\"listCharacter\":\"Cast_listCharacter__-sThV\",\"listWrap\":\"Cast_listWrap__tTH9v\",\"error\":\"Cast_error__hQWWB\",\"loading\":\"Cast_loading__G4Jdp\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport { getMovieCast } from 'components/Service/Api';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { cast } = await getMovieCast(movieId);\n        setData(cast);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <div className={css.loading}>\n          <MagnifyingGlass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"MagnifyingGlass-loading\"\n            wrapperStyle={{ margin: '0 auto' }}\n            wrapperClass=\"MagnifyingGlass-wrapper\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n          />\n        </div>\n      ) : data && data.length > 0 ? (\n        <div className={css.listWrap}>\n          <ul className={css.list}>\n            {data.map(({ name, character, profile_path, id }) => (\n              <li key={id} className={css.listItem}>\n                {profile_path ? (\n                  <img\n                    className={css.listImg}\n                    alt={name}\n                    src={`https://image.tmdb.org/t/p/w92${profile_path}`}\n                  />\n                ) : (\n                  <img className={css.listImg} alt={name} src='/src/svg/user_1.svg' />\n                )}\n\n                <p className={css.listName}>{name}</p>\n                <p className={css.listCharacter}>{character}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p className={css.error}>No data found</p>\n      )}\n    </>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.number,\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst apiKey = '7c406e0461b4f259f1eed9475dcfb501';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: baseUrl,\n  params: {\n    api_key: apiKey,\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async (page) => {\n  const request = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(request, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async (id) => {\n  const request = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(request);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCast = async (id) => {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMovie = async (requestString, page) => {\n  const request = `/search/movie`;\n  try {\n    const { data } = await instance.get(request, {\n      params: {\n        query: requestString,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};"],"names":["useState","data","setData","loading","setLoading","movieId","useParams","useEffect","getData","getMovieCast","cast","console","log","className","css","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","glassColor","color","length","map","name","character","profile_path","id","alt","src","instance","axios","baseURL","params","api_key","language","getTrendingMovies","page","get","getMovieDetails","request","query","getMovieReviews","searchMovie","requestString"],"sourceRoot":""}