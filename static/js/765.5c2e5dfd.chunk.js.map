{"version":3,"file":"static/js/765.5c2e5dfd.chunk.js","mappings":"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","sources":["Pages/Home/Home.jsx","components/Paginator/Paginator.jsx","components/Service/Api.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport { getTrendingMovies } from 'components/Service/Api';\nimport Paginator from 'components/Paginator/Paginator';\n\nconst imgPlaceholder = '/src/img/noMovieImg.jpg';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\n  const location = useLocation();\n\n  const params = useMemo(() => Object.fromEntries([...searchParams]), [searchParams]);\n\n  const page = Number(params.page || 1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getTrendingMovies(page);\n        setMovies(data.results);\n        setTotalPages(data.total_pages);\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [page]);\n\n  return (\n    <>\n      <h2 className=\"mainTitle\">Trending movies:</h2>\n      <ul className=\"listMovies\">\n        {loading ? (\n          <div className=\"loading\">\n            <MagnifyingGlass\n              visible={true}\n              height=\"80\"\n              width=\"80\"\n              ariaLabel=\"MagnifyingGlass-loading\"\n              style={{ margin: '0 auto' }}\n              className=\"MagnifyingGlass-wrapper\"\n              glassColor=\"#c0efff\"\n              color=\"#e15b64\"\n            />\n          </div>\n        ) : (\n          movies.map(({ title, id, poster_path }) => (\n            <li key={id} className=\"movieItem\">\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  className=\"poster\"\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : imgPlaceholder\n                  }\n                  alt={title}\n                />\n                <p className=\"title\">{title}</p>\n              </Link>\n            </li>\n          ))\n        )}\n      </ul>\n\n      <Paginator\n        totalPages={totalPages}\n        setSearchParams={setSearchParams}\n        params={params}\n        currentPage={Number(params?.page - 1) || 0}\n      />\n    </>\n  );\n};\n\nexport default Home;","import ReactPaginate from 'react-paginate';\nimport PropTypes from 'prop-types';\nimport './Paginator.module.css';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\n\nfunction Paginator({ totalPages, setSearchParams, params, currentPage }) {\n  const handlePageClick = (e) => {\n    setSearchParams({ ...params, page: e.selected + 1 });\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <ReactPaginate\n          breakLabel=\"...\"\n          previousLabel={<IoIosArrowBack />}\n          nextLabel={<IoIosArrowForward />}\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={4}\n          marginPagesDisplayed={2}\n          pageCount={totalPages - 1}\n          renderOnZeroPageCount={null}\n          forcePage={currentPage}\n          containerClassName=\"container\"\n          activeClassName=\"selected\"\n          pageClassName=\"page\"\n          breakClassName=\"break\"\n          previousClassName=\"previous\"\n          nextClassName=\"next\"\n          disabledClassName=\"disabled\"\n        />\n      </div>\n    </>\n  );\n}\n\nPaginator.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Paginator;","import axios from 'axios';\n\nconst apiKey = '7c406e0461b4f259f1eed9475dcfb501';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: baseUrl,\n  params: {\n    api_key: apiKey,\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async (page) => {\n  const request = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(request, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async (id) => {\n  const request = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(request);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCast = async (id) => {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMovie = async (requestString, page) => {\n  const request = `/search/movie`;\n  try {\n    const { data } = await instance.get(request, {\n      params: {\n        query: requestString,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};"],"names":["useState","loading","setLoading","movies","setMovies","useSearchParams","page","searchParams","setSearchParams","location","useLocation","params","useMemo","Object","fromEntries","Number","totalPages","setTotalPages","useEffect","getData","getTrendingMovies","data","results","total_pages","alert","message","className","visible","height","width","ariaLabel","style","margin","glassColor","color","map","title","id","poster_path","to","state","from","src","alt","currentPage","breakLabel","previousLabel","nextLabel","onPageChange","e","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","renderOnZeroPageCount","forcePage","containerClassName","activeClassName","pageClassName","breakClassName","previousClassName","nextClassName","disabledClassName","instance","axios","baseURL","api_key","language","get","getMovieDetails","request","getMovieCast","query","getMovieReviews","searchMovie","requestString"],"sourceRoot":""}