{"version":3,"file":"static/js/76.6b454bee.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/Service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__9VA3h\",\"loading\":\"MovieDetails_loading__p0TT7\",\"imgWrap\":\"MovieDetails_imgWrap__xy8n4\",\"image\":\"MovieDetails_image__y5vVl\",\"wrapper\":\"MovieDetails_wrapper__eugUr\",\"paragraph\":\"MovieDetails_paragraph__JGSEq\",\"list\":\"MovieDetails_list__T2rL1\",\"castButton\":\"MovieDetails_castButton__X596Q\",\"reviews\":\"MovieDetails_reviews__mFRLJ\"};","// import { Link, Outlet, useLocation, useParams, Suspense, useEffect, useState } from 'react-router-dom';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport { getMovieDetails } from 'components/Service/Api';\nimport { useEffect, useState } from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport { Suspense } from 'react';\n// eslint-disable-next-line\nimport Cast from '../../components/Cast/Cast';\n// eslint-disable-next-line\nimport Reviews from '../../components/Reviews/Reviews';\n\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const movieData = await getMovieDetails(movieId);\n        setData(movieData);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const getYear = releaseData => {\n    const date = new Date(releaseData);\n    return date.getFullYear();\n  };\n\n  const getGenres = () => {\n    return data.genres.map(genre => genre.name).join(', ');\n  };\n\n  const location = useLocation();\n\n  const cameBack = location.state?.from || '/';\n\n  return (\n    <>\n      <Link className={css.button} to={cameBack}>\n        Go Back\n      </Link>\n      {loading ? (\n        <div className={css.loading}>\n          <MagnifyingGlass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"MagnifyingGlass-loading\"\n            wrapperStyle={{ margin: '0 auto' }}\n            wrapperClass=\"MagnifyingGlass-wrapper\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n          />\n        </div>\n      ) : (\n        <>\n          <div className={css.imgWrap}>\n            {data.poster_path ? (\n              <img className={css.image} alt={data.original_title} src={`https://image.tmdb.org/t/p/w500${data.poster_path}`} />\n            ) : (\n              <img className={css.image} src=\"/src/img/noMovieImg.jpg\" alt=\"not available\" />\n            )}\n            <div className={css.wrapper}>\n              <h1>\n                {data.original_title} ({getYear(data.release_date)})\n              </h1>\n              <p className={css.paragraph}>User Score: {Math.floor(data.vote_average * 10)}%</p>\n              <p className={css.paragraph}>Overview</p>\n              <p>{getGenres()}</p>\n            </div>\n            <div>\n              <ul className={css.list}>\n                <li>\n                  <Link to={`/movies/${movieId}/cast`} state={{ from: cameBack }}>\n                    <button className={css.castButton}>Cast</button>\n                  </Link>\n                </li>\n                <li>\n                  <Link to={`/movies/${movieId}/reviews`} state={{ from: cameBack }}>\n                    <button className={css.reviews}>Reviews</button>\n                  </Link>\n                </li>\n              </ul>\n            </div>\n            <Suspense\n              fallback={\n                <div className={css.loading}>\n                  <MagnifyingGlass\n                    visible={true}\n                    height=\"80\"\n                    width=\"80\"\n                    ariaLabel=\"MagnifyingGlass-loading\"\n                    wrapperStyle={{ margin: '0 auto' }}\n                    wrapperClass=\"MagnifyingGlass-wrapper\"\n                    glassColor=\"#c0efff\"\n                    color=\"#e15b64\"\n                  />\n                </div>\n              }\n            >\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;","// extracted by mini-css-extract-plugin\nexport default {\"listImg\":\"Cast_listImg__+ZdU0\",\"container\":\"Cast_container__iz+ye\",\"list\":\"Cast_list__GlWio\",\"listItem\":\"Cast_listItem__UvJjd\",\"listName\":\"Cast_listName__cVb6+\",\"listCharacter\":\"Cast_listCharacter__-sThV\",\"listWrap\":\"Cast_listWrap__tTH9v\",\"error\":\"Cast_error__hQWWB\",\"loading\":\"Cast_loading__G4Jdp\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport { getMovieCast } from 'components/Service/Api';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const castData = await getMovieCast(movieId);\n        setData(castData.cast);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text)\n      .then(() => {\n        console.log('Text copied to clipboard:', text);\n      })\n      .catch((error) => {\n        console.log('Failed to copy text:', error);\n      });\n  };\n\n  return (\n    <>\n      {loading ? (\n        <div className={css.loading}>\n          <MagnifyingGlass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"MagnifyingGlass-loading\"\n            wrapperStyle={{ margin: '0 auto' }}\n            wrapperClass=\"MagnifyingGlass-wrapper\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n          />\n        </div>\n      ) : data && data.length > 0 ? (\n        <div className={css.container}>\n          <div className={css.listWrap}>\n            <ul className={css.list}>\n              {data.map(({ name, character, profile_path, id }) => (\n                <li key={id} className={css.listItem}>\n                  {profile_path ? (\n                    <img\n                      className={css.listImg}\n                      alt={name}\n                      src={`https://image.tmdb.org/t/p/w92${profile_path}`}\n                    />\n                  ) : (\n                    <img className={css.listImg} alt={name} src='/src/svg/user_1.svg' />\n                  )}\n\n                  <p className={css.listName}>{name}</p>\n                  <p className={css.listCharacter}>{character}</p>\n                  <button onClick={() => handleCopy(name)}>Copy Name</button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      ) : (\n        <p className={css.error}>No data found</p>\n      )}\n    </>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.number,\n};\n\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"listItem\":\"Reviews_listItem__dF9oT\",\"listWrap\":\"Reviews_listWrap__i0OtH\",\"listName\":\"Reviews_listName__TAz4E\",\"error\":\"Reviews_error__urRRw\",\"loading\":\"Reviews_loading__r+PE9\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport css from './Reviews.module.css';\nimport { getMovieReviews } from 'components/Service/Api';\n\nconst Reviews = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(movieId);\n        setData(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <div className={css.loading}>\n          <MagnifyingGlass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"MagnifyingGlass-loading\"\n            wrapperStyle={{ margin: '0 auto' }}\n            wrapperClass=\"MagnifyingGlass-wrapper\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n          />\n        </div>\n      ) : data && data.length > 0 ? (\n        <div className={css.listWrap}>\n          <ul className={css.list}>\n            {data.map(({ author, content, id }) => (\n              <li key={id} className={css.listItem}>\n                <p className={css.listName}>{author}</p>\n                {content && content}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p className={css.error}>No reviews found</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst apiKey = '7c406e0461b4f259f1eed9475dcfb501';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: baseUrl,\n  params: {\n    api_key: apiKey,\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async (page) => {\n  const request = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(request, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async (id) => {\n  const request = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(request);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCast = async (id) => {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMovie = async (requestString, page) => {\n  const request = `/search/movie`;\n  try {\n    const { data } = await instance.get(request, {\n      params: {\n        query: requestString,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};"],"names":["movieId","useParams","useState","data","setData","loading","setLoading","useEffect","fetchData","getMovieDetails","movieData","console","log","releaseData","cameBack","useLocation","state","from","className","css","to","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","glassColor","color","poster_path","alt","original_title","src","release_date","Date","getFullYear","Math","floor","vote_average","genres","map","genre","name","join","Suspense","fallback","getMovieCast","castData","cast","length","character","profile_path","id","onClick","text","navigator","clipboard","writeText","then","catch","error","getData","getMovieReviews","results","author","content","instance","axios","baseURL","params","api_key","language","getTrendingMovies","page","get","request","query","searchMovie","requestString"],"sourceRoot":""}