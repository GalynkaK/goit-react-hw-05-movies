{"version":3,"file":"static/js/168.f1524fd4.chunk.js","mappings":"sPACA,EAAuB,sBAAvB,EAAwD,0BAAxD,EAA6F,0BAA7F,EAAkI,0BAAlI,EAAoK,uBAApK,EAAqM,yB,kBC4DrM,EAvDgB,WACd,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,sGAEZJ,GAAW,GAFC,UAGcK,EAAAA,EAAAA,IAAgBJ,GAH9B,gBAGJK,EAHI,EAGJA,QACRR,EAAQQ,GACRN,GAAW,GALC,kDAOZO,QAAQC,IAAR,MAPY,yBASZR,GAAW,GATC,6EAAH,qDAYbI,GACD,GAAE,CAACH,KAGF,8BACGF,GACC,gBAAKU,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CAAEC,OAAQ,UACxBC,aAAa,0BACbC,WAAW,UACXC,MAAM,cAGRtB,GAAQA,EAAKuB,OAAS,GACxB,gBAAKX,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGb,EAAKwB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACR,gBAAaf,UAAWC,EAAxB,WACE,cAAGD,UAAWC,EAAd,SAA6BY,IAC5BC,GAAWA,IAFLC,EADD,SASd,cAAGf,UAAWC,EAAd,SAAyB,sBAIhC,C,sLCtDKe,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHc,+BAIdC,OAAQ,CACNC,QANW,mCAOXC,SAAU,WAIDC,EAAiB,mCAAG,WAAOC,GAAP,wHAGNP,EAASQ,IAHH,uBAGgB,CAC3CL,OAAQ,CACNI,KAAAA,KALyB,uBAGrBnC,EAHqB,EAGrBA,KAHqB,kBAQtBA,GARsB,oGAAH,sDAcjBqC,EAAe,mCAAG,WAAOV,GAAP,kFACvBW,EADuB,iBACHX,GADG,kBAGJC,EAASQ,IAAIE,GAHT,uBAGnBtC,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,oGAAH,sDAUfuC,EAAY,mCAAG,WAAOZ,GAAP,kFACpBa,EADoB,iBACFb,EADE,8BAGDC,EAASQ,IAAII,GAHZ,uBAGhBxC,EAHgB,EAGhBA,KAHgB,kBAIjBA,GAJiB,oGAAH,sDAUZQ,EAAe,mCAAG,WAAOmB,GAAP,kFACvBa,EADuB,iBACLb,EADK,8BAGJC,EAASQ,IAAII,GAHT,uBAGnBxC,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,oGAAH,sDAUfyC,EAAW,mCAAG,WAAOC,EAAeP,GAAtB,iHAGAP,EAASQ,IAHT,gBAGsB,CAC3CL,OAAQ,CACNS,MAAOE,EACPP,KAAAA,KANmB,uBAGfnC,EAHe,EAGfA,KAHe,kBAShBA,GATgB,oGAAH,uD","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/Service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"listItem\":\"Reviews_listItem__dF9oT\",\"listWrap\":\"Reviews_listWrap__i0OtH\",\"listName\":\"Reviews_listName__TAz4E\",\"error\":\"Reviews_error__urRRw\",\"loading\":\"Reviews_loading__r+PE9\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport css from './Reviews.module.css';\nimport { getMovieReviews } from 'components/Service/Api';\n\nconst Reviews = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(movieId);\n        setData(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <div className={css.loading}>\n          <MagnifyingGlass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"MagnifyingGlass-loading\"\n            wrapperStyle={{ margin: '0 auto' }}\n            wrapperClass=\"MagnifyingGlass-wrapper\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n          />\n        </div>\n      ) : data && data.length > 0 ? (\n        <div className={css.listWrap}>\n          <ul className={css.list}>\n            {data.map(({ author, content, id }) => (\n              <li key={id} className={css.listItem}>\n                <p className={css.listName}>{author}</p>\n                {content && content}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p className={css.error}>No reviews found</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst apiKey = '7c406e0461b4f259f1eed9475dcfb501';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: baseUrl,\n  params: {\n    api_key: apiKey,\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async (page) => {\n  const request = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(request, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async (id) => {\n  const request = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(request);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCast = async (id) => {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMovie = async (requestString, page) => {\n  const request = `/search/movie`;\n  try {\n    const { data } = await instance.get(request, {\n      params: {\n        query: requestString,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};"],"names":["useState","data","setData","loading","setLoading","movieId","useParams","useEffect","getData","getMovieReviews","results","console","log","className","css","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","glassColor","color","length","map","author","content","id","instance","axios","baseURL","params","api_key","language","getTrendingMovies","page","get","getMovieDetails","request","getMovieCast","query","searchMovie","requestString"],"sourceRoot":""}